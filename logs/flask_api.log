2024-07-25 23:38:54,519 ERROR: Error generating smart contract: Expected a dictionary but got <class 'app.smart_contract_generator.schema.SmartContractCode'>: code='```solidity\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ncontract ERC20TokenContract is IERC20 {\n    string public name;\n    string public symbol;\n    uint8 public decimals;\n    uint256 private _totalSupply;\n    mapping(address => uint256) private _balances;\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    address public owner;\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, "Only owner can call this function");\n        _;\n    }\n\n    constructor(string memory _name, string memory _symbol, uint8 _decimals, uint256 initialSupply) {\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        owner = msg.sender;\n        _totalSupply = initialSupply;\n        _balances[msg.sender] = initialSupply;\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        require(_balances[msg.sender] >= amount, "Insufficient balance");\n        _balances[msg.sender] -= amount;\n        _balances[recipient] += amount;\n        emit Transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function allowance(address owner, address spender) public view override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _allowances[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        require(_balances[sender] >= amount, "Insufficient balance");\n        require(_allowances[sender][msg.sender] >= amount, "Allowance exceeded");\n        _balances[sender] -= amount;\n        _balances[recipient] += amount;\n        _allowances[sender][msg.sender] -= amount;\n        emit Transfer(sender, recipient, amount);\n        return true;\n    }\n\n    function mint(address account, uint256 amount) public onlyOwner {\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    function burn(address account, uint256 amount) public onlyOwner {\n        require(_balances[account] >= amount, "Insufficient balance");\n        _totalSupply -= amount;\n        _balances[account] -= amount;\n        emit Transfer(account, address(0), amount);\n    }\n}\n```' [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/routes.py:45]
2024-07-25 23:52:09,866 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 23:52:14,117 INFO: Generating smart contract for description: A simple ERC20 token contract with mint and burn functionalities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:24]
2024-07-25 23:52:49,365 INFO: Generating smart contract for description: A simple ERC20 token contract with mint and burn functionalities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:24]
2024-07-25 23:55:20,074 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
