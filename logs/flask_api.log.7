2024-07-25 04:10:44,229 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 04:10:46,280 ERROR: Validation error: {'smart_contract_description': ['Missing data for required field.'], 'description': ['Unknown field.']} [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/routes.py:45]
2024-07-25 04:11:08,353 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 21:18:37,666 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 21:20:45,706 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 21:33:08,769 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 21:33:50,573 INFO: Generating smart contract for description: i want something where i can send monthly salary to an employee in eth [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:23]
2024-07-25 22:01:06,916 INFO: Generating smart contract for description: can you help me create a smart contract for an employee where i will send me 2 ETH monthly  [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:23]
2024-07-25 22:28:20,087 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 22:30:01,180 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 22:30:33,209 INFO: Generating smart contract for description: Generate a Smart contract for an employee [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:27]
2024-07-25 22:30:34,839 ERROR: Unexpected error: string indices must be integers, not 'str' [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/routes.py:48]
2024-07-25 22:33:39,768 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 22:33:49,481 INFO: Generating smart contract for description: A simple ERC20 token contract with mint and burn functionalities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:27]
2024-07-25 22:33:51,544 ERROR: Error generating smart contract: Invalid response format for smart contract classifier [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/routes.py:45]
2024-07-25 23:25:39,030 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 23:25:52,277 INFO: Generating smart contract for description: A simple ERC20 token contract with mint and burn functionalities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:27]
2024-07-25 23:25:54,114 ERROR: Error generating smart contract: Invalid response format for smart contract classifier [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/routes.py:45]
2024-07-25 23:27:17,046 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 23:27:21,811 INFO: Generating smart contract for description: A simple ERC20 token contract with mint and burn functionalities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:23]
2024-07-25 23:27:23,447 INFO: Response from model: content='Contract Type: ERC20 Token Contract\n\nRequirements:\n1. Implement the ERC20 interface with functions such as transfer, approve, transferFrom, totalSupply, balanceOf, and allowance.\n2. Include functions for minting new tokens and burning existing tokens.\n3. Ensure that the contract is able to handle token transfers and approvals securely.\n4. Implement proper access control mechanisms for minting and burning functions to prevent unauthorized access.\n5. Include events for tracking token minting and burning activities.' response_metadata={'token_usage': {'completion_tokens': 98, 'prompt_tokens': 102, 'total_tokens': 200}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None} id='run-43a5e55a-952a-43bd-85de-fadb9753d101-0' usage_metadata={'input_tokens': 102, 'output_tokens': 98, 'total_tokens': 200} [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/smart_contract_generator/smart_contract_classifier.py:23]
2024-07-25 23:27:23,449 ERROR: Error generating smart contract: Invalid response format for smart contract classifier: Contract Type: ERC20 Token Contract

Requirements:
1. Implement the ERC20 interface with functions such as transfer, approve, transferFrom, totalSupply, balanceOf, and allowance.
2. Include functions for minting new tokens and burning existing tokens.
3. Ensure that the contract is able to handle token transfers and approvals securely.
4. Implement proper access control mechanisms for minting and burning functions to prevent unauthorized access.
5. Include events for tracking token minting and burning activities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:30]
2024-07-25 23:27:23,449 ERROR: Error generating smart contract: Invalid response format for smart contract classifier: Contract Type: ERC20 Token Contract

Requirements:
1. Implement the ERC20 interface with functions such as transfer, approve, transferFrom, totalSupply, balanceOf, and allowance.
2. Include functions for minting new tokens and burning existing tokens.
3. Ensure that the contract is able to handle token transfers and approvals securely.
4. Implement proper access control mechanisms for minting and burning functions to prevent unauthorized access.
5. Include events for tracking token minting and burning activities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/routes.py:45]
2024-07-25 23:28:52,768 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 23:28:59,513 INFO: Generating smart contract for description: A simple ERC20 token contract with mint and burn functionalities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:23]
2024-07-25 23:29:01,235 INFO: Response from model: content='Contract Type: ERC20 Token Contract\n\nRequirements:\n1. Implement the ERC20 interface with functions such as transfer, approve, transferFrom, totalSupply, balanceOf, and allowance.\n2. Include functions for minting new tokens and burning existing tokens.\n3. Ensure that the contract is able to handle token transfers and approvals securely.\n4. Implement proper access control mechanisms for minting and burning functions to prevent unauthorized access.\n5. Include events for tracking token minting and burning activities.' response_metadata={'token_usage': {'completion_tokens': 98, 'prompt_tokens': 102, 'total_tokens': 200}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None} id='run-fa78ede6-61d6-4fff-832b-b6b64e813c61-0' usage_metadata={'input_tokens': 102, 'output_tokens': 98, 'total_tokens': 200} [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/smart_contract_generator/smart_contract_classifier.py:24]
2024-07-25 23:29:17,616 ERROR: Error generating smart contract: Invalid response format for describe smart contract functions [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:30]
2024-07-25 23:29:17,617 ERROR: Error generating smart contract: Invalid response format for describe smart contract functions [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/routes.py:45]
2024-07-25 23:30:36,495 INFO: Flask API startup [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/__init__.py:71]
2024-07-25 23:30:40,604 INFO: Generating smart contract for description: A simple ERC20 token contract with mint and burn functionalities. [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/ai/generate_smart_contract.py:23]
2024-07-25 23:30:42,412 INFO: Response from model: content='Contract Type: ERC20 Token Contract\n\nRequirements:\n1. Implement the ERC20 interface with functions such as transfer, approve, transferFrom, totalSupply, balanceOf, and allowance.\n2. Include functions for minting new tokens and burning existing tokens.\n3. Ensure that the contract is able to handle token transfers and approvals securely.\n4. Implement proper access control mechanisms for minting and burning functions to prevent unauthorized access.\n5. Include events for tracking token minting and burning activities.' response_metadata={'token_usage': {'completion_tokens': 98, 'prompt_tokens': 102, 'total_tokens': 200}, 'model_name': 'gpt-3.5-turbo-0125', 'system_fingerprint': None, 'finish_reason': 'stop', 'logprobs': None} id='run-ab322ed9-3e6d-4614-84c3-adcf0f6ec86e-0' usage_metadata={'input_tokens': 102, 'output_tokens': 98, 'total_tokens': 200} [in /Users/bilal/Documents/comsc/kings/individual-project/Tokenize/backend/app/smart_contract_generator/smart_contract_classifier.py:24]
